<<<<<<< HEAD
<<<<<<< HEAD
version: 0.{build}-{branch}

<<<<<<< HEAD
# don't build tags
=======

environment:
  global:
    JOMDIR: C:\Qt\Tools\QtCreator\bin
    MINGWDIR: C:\Qt\Tools\mingw530_32
    VSVER: 0
    USE_LINUX: false

  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      QTABI: mingw53_32
      QTVER: 5.11
      ARCH: x86
      MAKETOOL: mingw32-make
      CMAKE_GENERATOR: "MinGW Makefiles"
      USE_CMAKE: true
      MSBUILD_FLAGS: 
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      QTABI: msvc2017_64
      QTVER: 5.11
      ARCH: x64
      VSVER: 2017
      CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
      USE_CMAKE: true
      MSBUILD_FLAGS: /verbosity:minimal /maxcpucount
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      QTABI: msvc2019_64
      QTVER: 5.15.2
      ARCH: x64
      VSVER: 2019
      CMAKE_GENERATOR: "Visual Studio 16 2019 Win64"
      USE_CMAKE: true
      MSBUILD_FLAGS: /verbosity:minimal /maxcpucount
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      QTABI: msvc2015
      QTVER: 5.11
      ARCH: x86
      VSVER: 14
      CMAKE_GENERATOR: "Visual Studio 15 2017"
      USE_CMAKE: true
      MSBUILD_FLAGS: /verbosity:minimal /maxcpucount
 #   - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
 #     QTABI: gcc_64
 #     QTVER: 5.15.2
 #     ARCH: x64
 #     CMAKE_GENERATOR: "Unix Makefiles"
 #     USE_CMAKE: true
 #     USE_LINUX: true


>>>>>>> fa0e58e (added build for higher Qt version to appveyor.yml)
=======
version: {branch}-0.{build}
=======
version: 0.{build}-{branch}
>>>>>>> 1bbbe35 (corrected appveyor.yml: Unix-Build (calculating Qt path))

# don't build tags
>>>>>>> 24f7646 (update appveyor.yml, added Qt 5.15 & Unix)
skip_tags: true


# build options
build:
  parallel: true
  verbosity: detailed


#configurations to build
configuration:
  - Release
#  - debug


<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 24f7646 (update appveyor.yml, added Qt 5.15 & Unix)
# define build matrix
environment:
  global:
    JOMDIR: C:\Qt\Tools\QtCreator\bin
    VSVER: 0
<<<<<<< HEAD
    CMAKE_BUILDFLAGS: 
    USE_CMAKE: true
 
  matrix:
    - QTABI: msvc2019_64
      COMPILER: MSVC
      QTVER: 5.15
      CMAKE_GENERATOR: "Visual Studio 16 2019"
      CMAKE_BUILDFLAGS: /verbosity:minimal /maxcpucount
      
#    - QTABI: mingw81_64
#      COMPILER: MinGW
#      MINGWDIR: C:\Qt\Tools\mingw810_64
#      QTVER: 5.15
#      CMAKE_GENERATOR: "MinGW Makefiles"
#
    - QTABI: gcc_64
      COMPILER: GCC
      QTVER: 5.15
      CMAKE_GENERATOR: "Unix Makefiles"
      
image:
  # AppVeyor builds are ordered by the image list:
  - Visual Studio 2019
  - Ubuntu2004
=======
install:
  - IF %VSVER% GTR 14 (
        call "C:\Program Files (x86)\Microsoft Visual Studio\%VSVER%\Community\VC\Auxiliary\Build\vcvarsall.bat" %ARCH%
    ) ELSE (
        IF %VSVER% GTR 0 (
            call "C:\Program Files (x86)\Microsoft Visual Studio "%VSVER%".0\VC\vcvarsall.bat" %ARCH%
        ) ELSE (
            set "PATH=%MINGWDIR%\bin;%PATH%"
        )
    )
  - set PATH=C:\Qt\%QTVER%\%QTABI%\bin;%JOMDIR%;%PATH%
  - echo "PATH = %PATH%"
  - echo "APPVEYOR_BUILD_WORKER_IMAGE = %APPVEYOR_BUILD_WORKER_IMAGE%"
  - echo "BUILD ID Qt%QTVER%_%QTABI%_%APPVEYOR_BUILD_VERSION%_%CONFIGURATION%"
  # Rename sh.exe as sh.exe in PATH interferes with MinGW
  - rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
  - cmd: choco install OpenCV
  - cmd: set OPENCV_DIR=C:\tools\opencv\build
>>>>>>> 29101b6 (added debug output to appveyor.yml)

matrix:
  exclude:
    # Exclude invalid options
    - image: Visual Studio 2019
      QTABI: gcc_64
    - image: Visual Studio 2019
      QTABI: mingw53_32
    - image: Visual Studio 2019
      QTABI: msvc2015
    - image: Ubuntu2004
      QTABI: mingw81_64
    - image: Ubuntu2004
      QTABI: msvc2019_64
    - image: Ubuntu2004
      QTABI: msvc2015_64
    - image: Ubuntu2004
      QTABI: msvc2015
    - image: Ubuntu2004
      QTABI: mingw53_32


for:
  # Windows (MinGW 8.1 & MSVC2019)
  - 
    matrix:
      only:
        - image: Visual Studio 2019
     
=======
    CMAKE_BUILDFLAGS:  /verbosity:minimal /maxcpucount
    USE_CMAKE: true
 
  matrix:
    #- QTABI: mingw53_32
    #  COMPILER: MinGW
    #  MINGWDIR: C:\Qt\Tools\mingw530_32
    #  QTVER: 5.11
    #  MAKETOOL: mingw32-make
    #  CMAKE_GENERATOR: "MinGW Makefiles"
      
    #- QTABI: msvc2015
    #  COMPILER: MSVC
    #  QTVER: 5.11
    #  CMAKE_GENERATOR: "Visual Studio 14 2015"
      
    - QTABI: msvc2019_64
      COMPILER: MSVC
      QTVER: 5.15
      CMAKE_GENERATOR: "Visual Studio 16 2019 Win64"
      
    - QTABI: mingw81_64
      COMPILER: MinGW
      MINGWDIR: C:\Qt\Tools\mingw810_64
      QTVER: 5.15
      CMAKE_GENERATOR: "Visual Studio 16 2019 Win64"

    - QTABI: gcc_64
      COMPILER: GCC
      QTVER: 5.15
      CMAKE_GENERATOR: "Unix Makefiles"
      
image:
  # AppVeyor builds are ordered by the image list:
  #- Visual Studio 2017
  - Visual Studio 2019
  - Ubuntu2004

matrix:
  exclude:
    # Exclude invalid options
    - image: Visual Studio 2019
      QTABI: gcc_64
    - image: Visual Studio 2019
      QTABI: mingw53_32
    - image: Visual Studio 2019
      QTABI: msvc2015
    - image: Visual Studio 2017
      QTABI: gcc_64
    - image: Visual Studio 2017
      QTABI: msvc2019_64
    - image: Visual Studio 2017
      QTABI: mingw81_64
    - image: Ubuntu2004
      QTABI: mingw81_64
    - image: Ubuntu2004
      QTABI: msvc2019_64
    - image: Ubuntu2004
      QTABI: msvc2015_64
    - image: Ubuntu2004
      QTABI: msvc2015
    - image: Ubuntu2004
      QTABI: mingw53_32


for:
  # Windows (MinGW 5.3 & MSVC2015)
  - 
    matrix:
      only:
        - image: Visual Studio 2019
      
>>>>>>> 24f7646 (update appveyor.yml, added Qt 5.15 & Unix)
    init:
      - cmd: echo == INIT SYSTEM ENVIRONMENT ======================================================================
      - cmd: echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%
      - cmd: echo PROCESSOR_IDENTIFIER=%PROCESSOR_IDENTIFIER%
      - cmd: echo APPVEYOR_BUILD_WORKER_IMAGE=%APPVEYOR_BUILD_WORKER_IMAGE%
<<<<<<< HEAD
<<<<<<< HEAD
=======
      - cmd: echo ARCH=%ARCH%
>>>>>>> 24f7646 (update appveyor.yml, added Qt 5.15 & Unix)
=======
>>>>>>> 1bbbe35 (corrected appveyor.yml: Unix-Build (calculating Qt path))
      - cmd: echo QTABI=%QTABI%
      - cmd: echo CMAKE_GENERATOR=%CMAKE_GENERATOR%
      - cmd: echo CMAKE_BUILDFLAGS=%CMAKE_BUILDFLAGS%

    install:
      # Init compiler environment
      - cmd: echo == INIT COMPILER ENVIRONMENT ====================================================================
      - cmd: set QTDIR=C:\Qt\%QTVER%\%QTABI%\bin
      - cmd: set PATH=%QTDIR%;%JOMDIR%;%PATH%
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      - cmd: if %COMPILER%==MinGW set "PATH=%MINGWDIR%\bin;%PATH%"
      - cmd: if %QTABI%==msvc2019 call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
      - cmd: if %QTABI%==msvc2019_64 call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
      # Rename sh.exe as sh.exe in PATH interferes with MinGW
      - cmd: if %COMPILER%==MinGW rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
      - cmd: echo QTDIR=%QTDIR%
      - cmd: echo JOMDIR=%JOMDIR%
      - cmd: echo PATH=%PATH%
      # Install OpenCV
      - cmd: echo == INSTALL OPENCV ===============================================================================
      - cmd: choco install OpenCV
      - cmd: set OPENCV_DIR=C:\tools\opencv\build
      - cmd: echo OPENCV_DIR=%OPENCV_DIR%
      # Install CImg
      - cmd: echo == INSTALL CIMG =================================================================================
      - cmd: mkdir C:\tools\cimg
      - cmd: git clone --depth=1 https://github.com/dtschump/CImg.git C:\tools\cimg
      - cmd: set CIMG_DIR=C:\tools\cimg
      - cmd: echo CIMG_DIR=%CIMG_DIR%
      - cmd: set CIMG_INCLUDE_DIR=C:\tools\cimg
      - cmd: echo CIMG_INCLUDE_DIR=%CIMG_INCLUDE_DIR%

    build_script:
      - cmd: echo == BUILD JKQtPlotter ============================================================================
      - cmd: mkdir build
      - cmd: cd build
      - cmd: if %USE_CMAKE%==true cmake --version 
      - cmd: if %USE_CMAKE%==true cmake -G "%CMAKE_GENERATOR%" "-DCMAKE_PREFIX_PATH=%QTDIR%" .. 
      - cmd: if %USE_CMAKE%==true cmake --build . --config "%CONFIGURATION%" -- %CMAKE_BUILDFLAGS% 
      - cmd: if %USE_CMAKE%==false qmake.exe -v 
      - cmd: if %USE_CMAKE%==false qmake.exe CONFIG+=%CONFIGURATION% ..\JKQtPlotterBuildAllExamples.pro 
      - cmd: if %USE_CMAKE%==false call %MAKETOOL% 
      - cmd: cd ..
=======
      - cmd: if /i "%QTABI:~0:5%"=="mingw" set "PATH=%MINGWDIR%\bin;%PATH%"
=======
      - cmd: if %COMPILER%==MinGW set "PATH=%MINGWDIR%\bin;%PATH%"
>>>>>>> 9c97b82 (tried to fix problem in appveyor.yml: build-phase set to MSBuild, but should be script)
=======
      - cmd: if %COMPILER%==MinGW set "PATH=%MINGWDIR%\bin;%PATH%"
>>>>>>> 22ac8fc (tried to fix problem in appveyor.yml: build-phase set to MSBuild, but should be script)
      - cmd: if %QTABI%==msvc2015 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
      - cmd: if %QTABI%==msvc2015_64 call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
      - cmd: if %QTABI%==msvc2015_64 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
      # Rename sh.exe as sh.exe in PATH interferes with MinGW
      - cmd: if %COMPILER%==MinGW rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
      - cmd: echo QTDIR=%QTDIR%
      - cmd: echo JOMDIR=%JOMDIR%
      - cmd: echo PATH=%PATH%
      - cmd: echo == INSTALL OPENCV ===============================================================================
      # Install OpenCV
      - cmd: choco install OpenCV
      - cmd: set OPENCV_DIR=C:\tools\opencv\build
      - cmd: echo OPENCV_DIR=%OPENCV_DIR%

    build_script:
      - cmd: echo == BUILD JKQtPlotter ============================================================================
<<<<<<< HEAD
<<<<<<< HEAD
      - cd c:\Build\JKQtPlotter
      - mkdir build
      - cd build
      - if "%CONFIGURATION%"=="release" (set CMAKE_CONFIGURATION=Release) else (set CMAKE_CONFIGURATION=Debug)
      - if [%USE_CMAKE%]==[true] (
          echo "--- Run CMake Configure -----------------------------------------------------------------------------" &&
          cmake --version &&
          cmake -G "%CMAKE_GENERATOR%" "-DCMAKE_PREFIX_PATH=%QTDIR%" .. &&
          echo "--- Build using CMake -------------------------------------------------------------------------------" &&
          cmake --build . --config "%CMAKE_CONFIGURATION%" -- %CMAKE_BUILDFLAGS% ) 
        else (
          echo "--- Run QMake Configure -----------------------------------------------------------------------------" &&
          qmake.exe -v &&
          qmake.exe CONFIG+=%CONFIGURATION% ..\JKQtPlotterBuildAllExamples.pro &&
          echo "--- Build using MAKETOOL ----------------------------------------------------------------------------" &&
          call %MAKETOOL% &&
          cd ..)
>>>>>>> 24f7646 (update appveyor.yml, added Qt 5.15 & Unix)
=======
=======
>>>>>>> 22ac8fc (tried to fix problem in appveyor.yml: build-phase set to MSBuild, but should be script)
      - cmd: mkdir build
      - cmd: cd build
      #- cmd: if %USE_CMAKE%==true echo --- Run CMake Configure ----------------------------------------------------------------------------- &&
      - cmd: if %USE_CMAKE%==true cmake --version &&
      - cmd: if %USE_CMAKE%==true cmake -G "%CMAKE_GENERATOR%" "-DCMAKE_PREFIX_PATH=%QTDIR%" .. &&
      #- cmd: if %USE_CMAKE%==true echo --- Build using CMake ------------------------------------------------------------------------------- &&
      - cmd: if %USE_CMAKE%==true cmake --build . --config "%CONFIGURATION%" -- %CMAKE_BUILDFLAGS% ) 
      #- cmd: if %USE_CMAKE%==false echo --- Run QMake Configure ----------------------------------------------------------------------------- &&
      - cmd: if %USE_CMAKE%==false qmake.exe -v &&
      - cmd: if %USE_CMAKE%==false qmake.exe CONFIG+=%CONFIGURATION% ..\JKQtPlotterBuildAllExamples.pro &&
      #- cmd: if %USE_CMAKE%==false echo --- Build using MAKETOOL ---------------------------------------------------------------------------- &&
      - cmd: if %USE_CMAKE%==false call %MAKETOOL% &&
      - cmd: cd ..
<<<<<<< HEAD
>>>>>>> 9c97b82 (tried to fix problem in appveyor.yml: build-phase set to MSBuild, but should be script)
=======
>>>>>>> 22ac8fc (tried to fix problem in appveyor.yml: build-phase set to MSBuild, but should be script)




<<<<<<< HEAD

  # Linux (Ubuntu2004)
  - 
    matrix:
      only:
        - image: Ubuntu2004
            
    init:
      - sh: echo == INIT SYSTEM ENVIRONMENT ======================================================================
      - sh: echo _NPROCESSORS_ONLN=$(getconf _NPROCESSORS_ONLN)
      - sh: echo APPVEYOR_BUILD_WORKER_IMAGE=$APPVEYOR_BUILD_WORKER_IMAGE
      - sh: echo QTABI=$QTABI
      - sh: echo CMAKE_GENERATOR=$CMAKE_GENERATOR
=======
  # Windows (MinGW 8.1 & MSVC2019)
  - 
    matrix:
      only:
        - image: Visual Studio 2022
     
    init:
      - cmd: echo == INIT SYSTEM ENVIRONMENT ======================================================================
      - cmd: echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%
      - cmd: echo PROCESSOR_IDENTIFIER=%PROCESSOR_IDENTIFIER%
      - cmd: echo APPVEYOR_BUILD_WORKER_IMAGE=%APPVEYOR_BUILD_WORKER_IMAGE%
      - cmd: echo QTABI=%QTABI%
      - cmd: echo CMAKE_GENERATOR=%CMAKE_GENERATOR%
      - cmd: echo CMAKE_BUILDFLAGS=%CMAKE_BUILDFLAGS%

    install:
      # Init compiler environment
      - cmd: echo == INIT COMPILER ENVIRONMENT ====================================================================
      - cmd: set QTDIR=C:\Qt\%QTVER%\%QTABI%\bin
      - cmd: set PATH=%QTDIR%;%JOMDIR%;%PATH%
      - cmd: if %COMPILER%==MinGW set "PATH=%MINGWDIR%\bin;%PATH%"
      - cmd: if %QTABI%==msvc2019 call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
      - cmd: if %QTABI%==msvc2019_64 call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
      # Rename sh.exe as sh.exe in PATH interferes with MinGW
      - cmd: if %COMPILER%==MinGW rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
      - cmd: echo QTDIR=%QTDIR%
      - cmd: echo JOMDIR=%JOMDIR%
      - cmd: echo PATH=%PATH%
      - cmd: echo == INSTALL OPENCV ===============================================================================
      # Install OpenCV
      - cmd: choco install OpenCV
      - cmd: set OPENCV_DIR=C:\tools\opencv\build
      - cmd: echo OPENCV_DIR=%OPENCV_DIR%

    build_script:
      - cmd: echo == BUILD JKQtPlotter ============================================================================
      - cmd: mkdir build
      - cmd: cd build
      #- cmd: if %USE_CMAKE%==true echo --- Run CMake Configure ----------------------------------------------------------------------------- &&
      - cmd: if %USE_CMAKE%==true cmake --version &&
      - cmd: if %USE_CMAKE%==true cmake -G "%CMAKE_GENERATOR%" "-DCMAKE_PREFIX_PATH=%QTDIR%" .. &&
      #- cmd: if %USE_CMAKE%==true echo --- Build using CMake ------------------------------------------------------------------------------- &&
      - cmd: if %USE_CMAKE%==true cmake --build . --config "%CONFIGURATION%" -- %CMAKE_BUILDFLAGS% ) 
      #- cmd: if %USE_CMAKE%==false echo --- Run QMake Configure ----------------------------------------------------------------------------- &&
      - cmd: if %USE_CMAKE%==false qmake.exe -v &&
      - cmd: if %USE_CMAKE%==false qmake.exe CONFIG+=%CONFIGURATION% ..\JKQtPlotterBuildAllExamples.pro &&
      #- cmd: if %USE_CMAKE%==false echo --- Build using MAKETOOL ---------------------------------------------------------------------------- &&
      - cmd: if %USE_CMAKE%==false call %MAKETOOL% &&
      - cmd: cd ..





  # Linux (Ubuntu2004)
  - 
    matrix:
      only:
        - image: Ubuntu2004
            
    init:
      - sh: echo == INIT SYSTEM ENVIRONMENT ======================================================================
      - sh: echo _NPROCESSORS_ONLN=$(getconf _NPROCESSORS_ONLN)
<<<<<<< HEAD
      - sh: echo APPVEYOR_BUILD_WORKER_IMAGE=%APPVEYOR_BUILD_WORKER_IMAGE%
      - sh: echo QTABI=%QTABI%
      - sh: echo CMAKE_GENERATOR=%CMAKE_GENERATOR%
>>>>>>> 24f7646 (update appveyor.yml, added Qt 5.15 & Unix)
=======
      - sh: echo APPVEYOR_BUILD_WORKER_IMAGE=$APPVEYOR_BUILD_WORKER_IMAGE
      - sh: echo QTABI=$QTABI
      - sh: echo CMAKE_GENERATOR=$CMAKE_GENERATOR
>>>>>>> f17c29e (Merge branch 'master' of https://github.com/jkriege2/JKQtPlotter)

    install:
      # Init compiler environment
      - sh: echo == INIT COMPILER ENVIRONMENT ====================================================================
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      - sh: export QTDIR=$HOME/Qt/$QTVER/$QTABI/
      - sh: export Qt5_DIR=$QTDIR/lib/cmake
      - sh: sudo apt update -qq
      - sh: sudo apt install -y build-essential git graphviz doxygen mesa-common-dev libglu1-mesa-dev qt5-qmake cmake
      - sh: echo QTDIR=$QTDIR
      - sh: echo Qt5_DIR=$Qt5_DIR
      - sh: ls /home/appveyor
      - sh: ls /home/appveyor/Qt
      - sh: ls /home/appveyor/Qt/5.15
      - sh: ls /home/appveyor/Qt/5.15/gcc_64
      - sh: echo PATH=$PATH
      - sh: sudo apt-get update -y
      # Install OpenCV
      - sh: echo == INSTALL OPENCV ===============================================================================
      - sh: sudo apt install -y libopencv-dev
      # Install CImg
      - sh: echo == INSTALL CImg =================================================================================
      - sh: sudo apt install -y cimg-dev

    build_script:
      - sh: echo == BUILD JKQtPlotter ============================================================================
      - sh: mkdir build
      - sh: cd build
      - sh: echo --- Run CMake Configure ----------------------------------------------------------------------------- 
      - sh: doxygen --version 
      - sh: cmake --version 
      - sh: cmake -G "$CMAKE_GENERATOR" "-DCMAKE_PREFIX_PATH=$QTDIR" .. 
      - sh: echo --- Build using CMake ------------------------------------------------------------------------------- 
      - sh: cmake --build . --config "$CONFIGURATION" -- $CMAKE_BUILDFLAGS 
=======
=======
      - sh: set QTDIR=$HOME/Qt/%QTVER%/%QTABI%/bin
>>>>>>> 1bbbe35 (corrected appveyor.yml: Unix-Build (calculating Qt path))
=======
      - sh: set QTDIR=$HOME/Qt/$QTVER/$QTABI/bin
>>>>>>> f17c29e (Merge branch 'master' of https://github.com/jkriege2/JKQtPlotter)
      - sh: sudo apt update -qq
      - sh: sudo apt install -y build-essential git qt5-qmake cmake
      - sh: echo QTDIR=$QTDIR
      - sh: echo PATH=$PATH
      - sh: echo == INSTALL OPENCV ===============================================================================
      # Install OpenCV
      - sh: sudo apt install -y libopencv-dev

    build_script:
      - sh: echo == BUILD JKQtPlotter ============================================================================
      - sh: mkdir build
      - sh: cd build
<<<<<<< HEAD
      - sh: echo "--- Run CMake Configure -----------------------------------------------------------------------------" &&
      - sh: cmake --version &&
      - sh: cmake -G "%CMAKE_GENERATOR%" "-DCMAKE_PREFIX_PATH=%QTDIR%" .. &&
      - sh: echo "--- Build using CMake -------------------------------------------------------------------------------" &&
<<<<<<< HEAD
<<<<<<< HEAD
      - sh: cmake --build . --config "%CMAKE_CONFIGURATION%" -- %CMAKE_BUILDFLAGS% ) 
>>>>>>> 24f7646 (update appveyor.yml, added Qt 5.15 & Unix)
=======
      - sh: cmake --build . --config "%CONFIGURATION%" -- %CMAKE_BUILDFLAGS% ) 
>>>>>>> 9c97b82 (tried to fix problem in appveyor.yml: build-phase set to MSBuild, but should be script)
=======
      - sh: cmake --build . --config "%CONFIGURATION%" -- %CMAKE_BUILDFLAGS% ) 
>>>>>>> 22ac8fc (tried to fix problem in appveyor.yml: build-phase set to MSBuild, but should be script)
=======
      - sh: echo --- Run CMake Configure ----------------------------------------------------------------------------- 
      - sh: cmake --version 
      - sh: cmake -G "$CMAKE_GENERATOR" .. 
      - sh: echo --- Build using CMake ------------------------------------------------------------------------------- 
      - sh: cmake --build . --config "$CONFIGURATION" -- $CMAKE_BUILDFLAGS ) 
>>>>>>> f17c29e (Merge branch 'master' of https://github.com/jkriege2/JKQtPlotter)
